services:
  php:
    build:
      context: .
    #  dockerfile: Dockerfile
    container_name: php_app
    ports:
      - "8000:8000"   # Exponer el puerto para acceder al servidor web PHP (si es necesario)
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html  # Monta el directorio actual al contenedor PHP
    networks:
      - app_network
    depends_on:
      - db
    command: ["php", "-S", "0.0.0.0:8000", "public/index.php"] # Ejecutar el servidor embebido en PHP en el puerto 8080

  db:
    image: mysql:8.0
    container_name: ${DB_HOST}
    platform: linux/amd64
    env_file: ".env"
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - 7300:3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  composer:
    image: composer:2
    container_name: composer-container
    volumes:
      - .:/var/www/html
    networks:
      - app_network
    entrypoint: ["composer", "install"]  # Ejecuta "composer install" autom√°ticamente al arrancar
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
    depends_on:
      - php
    working_dir: /var/www/html
  
volumes:
  mysql_data:
    driver: local

networks:
  app_network:
    driver: bridge
